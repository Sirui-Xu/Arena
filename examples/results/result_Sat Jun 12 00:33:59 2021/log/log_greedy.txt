==> Using greedy
============== test case ==============
==> num_coins: 1
==> num_enemies: 0
==> num_obstacles: 0
==> In case 0, the algorithm got 0.8179069375972307.
==> The average performance in this setting is 0.8179069375972307
============== test case ==============
==> num_coins: 1
==> num_enemies: 0
==> num_obstacles: 1
==> In case 0, the algorithm got 0.6964132180495735.
==> The average performance in this setting is 0.6964132180495735
============== test case ==============
==> num_coins: 1
==> num_enemies: 0
==> num_obstacles: 2
==> In case 0, the algorithm got 0.6556592205741436.
==> The average performance in this setting is 0.6556592205741436
============== test case ==============
==> num_coins: 1
==> num_enemies: 0
==> num_obstacles: 3
==> In case 0, the algorithm got 0.6556592205741436.
==> The average performance in this setting is 0.6556592205741436
============== test case ==============
==> num_coins: 1
==> num_enemies: 0
==> num_obstacles: 4
==> In case 0, the algorithm got 0.4612219674180955.
==> The average performance in this setting is 0.4612219674180955
============== test case ==============
==> num_coins: 1
==> num_enemies: 0
==> num_obstacles: 5
==> In case 0, the algorithm got 0.5203405226503064.
==> The average performance in this setting is 0.5203405226503064
============== test case ==============
==> num_coins: 1
==> num_enemies: 1
==> num_obstacles: 0
==> In case 0, the algorithm got 0.9135172474836407.
==> The average performance in this setting is 0.9135172474836407
============== test case ==============
==> num_coins: 1
==> num_enemies: 1
==> num_obstacles: 1
==> In case 0, the algorithm got 0.7547192872036325.
==> The average performance in this setting is 0.7547192872036325
============== test case ==============
==> num_coins: 1
==> num_enemies: 1
==> num_obstacles: 2
==> In case 0, the algorithm got 0.7177305325982748.
==> The average performance in this setting is 0.7177305325982748
============== test case ==============
==> num_coins: 1
==> num_enemies: 1
==> num_obstacles: 3
==> In case 0, the algorithm got 0.7177305325982748.
==> The average performance in this setting is 0.7177305325982748
============== test case ==============
==> num_coins: 1
==> num_enemies: 1
==> num_obstacles: 4
==> In case 0, the algorithm got 0.7177305325982748.
==> The average performance in this setting is 0.7177305325982748
============== test case ==============
==> num_coins: 1
==> num_enemies: 1
==> num_obstacles: 5
==> In case 0, the algorithm got 0.6298236312032323.
==> The average performance in this setting is 0.6298236312032323
============== test case ==============
==> num_coins: 1
==> num_enemies: 2
==> num_obstacles: 0
==> In case 0, the algorithm got 0.8179069375972307.
==> The average performance in this setting is 0.8179069375972307
============== test case ==============
==> num_coins: 1
==> num_enemies: 2
==> num_obstacles: 1
==> In case 0, the algorithm got 0.8863848717161291.
==> The average performance in this setting is 0.8863848717161291
============== test case ==============
==> num_coins: 1
==> num_enemies: 2
==> num_obstacles: 2
==> In case 0, the algorithm got 0.8687458127689781.
==> The average performance in this setting is 0.8687458127689781
============== test case ==============
==> num_coins: 1
==> num_enemies: 2
==> num_obstacles: 3
==> In case 0, the algorithm got 0.8863848717161291.
==> The average performance in this setting is 0.8863848717161291
============== test case ==============
==> num_coins: 1
==> num_enemies: 2
==> num_obstacles: 4
==> In case 0, the algorithm got 0.7700431458051551.
==> The average performance in this setting is 0.7700431458051551
============== test case ==============
==> num_coins: 1
==> num_enemies: 2
==> num_obstacles: 5
==> In case 0, the algorithm got 0.6111172395328651.
==> The average performance in this setting is 0.6111172395328651
============== test case ==============
==> num_coins: 1
==> num_enemies: 3
==> num_obstacles: 0
==> In case 0, the algorithm got 0.6111172395328651.
==> The average performance in this setting is 0.6111172395328651
============== test case ==============
==> num_coins: 1
==> num_enemies: 3
==> num_obstacles: 1
==> In case 0, the algorithm got 0.7778213593991465.
==> The average performance in this setting is 0.7778213593991465
============== test case ==============
==> num_coins: 1
==> num_enemies: 3
==> num_obstacles: 2
==> In case 0, the algorithm got 0.7778213593991465.
==> The average performance in this setting is 0.7778213593991465
============== test case ==============
==> num_coins: 1
==> num_enemies: 3
==> num_obstacles: 3
==> In case 0, the algorithm got 0.7778213593991465.
==> The average performance in this setting is 0.7778213593991465
============== test case ==============
==> num_coins: 1
==> num_enemies: 3
==> num_obstacles: 4
==> In case 0, the algorithm got 0.5151371174238033.
==> The average performance in this setting is 0.5151371174238033
============== test case ==============
==> num_coins: 1
==> num_enemies: 3
==> num_obstacles: 5
==> In case 0, the algorithm got 0.8429431933839266.
==> The average performance in this setting is 0.8429431933839266
============== test case ==============
==> num_coins: 1
==> num_enemies: 4
==> num_obstacles: 0
==> In case 0, the algorithm got 0.8863848717161291.
==> The average performance in this setting is 0.8863848717161291
============== test case ==============
==> num_coins: 1
==> num_enemies: 4
==> num_obstacles: 1
==> In case 0, the algorithm got 0.4047319726783239.
==> The average performance in this setting is 0.4047319726783239
============== test case ==============
==> num_coins: 1
==> num_enemies: 4
==> num_obstacles: 2
==> In case 0, the algorithm got 0.4047319726783239.
==> The average performance in this setting is 0.4047319726783239
============== test case ==============
==> num_coins: 1
==> num_enemies: 4
==> num_obstacles: 3
==> In case 0, the algorithm got 0.40882017442254937.
==> The average performance in this setting is 0.40882017442254937
============== test case ==============
==> num_coins: 1
==> num_enemies: 4
==> num_obstacles: 4
==> In case 0, the algorithm got 0.5639051904523876.
==> The average performance in this setting is 0.5639051904523876
============== test case ==============
==> num_coins: 1
==> num_enemies: 4
==> num_obstacles: 5
==> In case 0, the algorithm got 0.5870367819374844.
==> The average performance in this setting is 0.5870367819374844
============== test case ==============
==> num_coins: 1
==> num_enemies: 5
==> num_obstacles: 0
==> In case 0, the algorithm got 0.44304798162617254.
==> The average performance in this setting is 0.44304798162617254
============== test case ==============
==> num_coins: 1
==> num_enemies: 5
==> num_obstacles: 1
==> In case 0, the algorithm got 0.
==> The average performance in this setting is 0.0
============== test case ==============
==> num_coins: 1
==> num_enemies: 5
==> num_obstacles: 2
==> In case 0, the algorithm got 0.8429431933839266.
==> The average performance in this setting is 0.8429431933839266
============== test case ==============
==> num_coins: 1
==> num_enemies: 5
==> num_obstacles: 3
==> In case 0, the algorithm got 0.
==> The average performance in this setting is 0.0
============== test case ==============
==> num_coins: 1
==> num_enemies: 5
==> num_obstacles: 4
==> In case 0, the algorithm got 0.5929664464014994.
==> The average performance in this setting is 0.5929664464014994
============== test case ==============
==> num_coins: 1
==> num_enemies: 5
==> num_obstacles: 5
==> In case 0, the algorithm got 0.
==> The average performance in this setting is 0.0
============== test case ==============
==> num_coins: 2
==> num_enemies: 0
==> num_obstacles: 0
==> In case 0, the algorithm got 1.3800125735822584.
==> The average performance in this setting is 1.3800125735822584
============== test case ==============
==> num_coins: 2
==> num_enemies: 0
==> num_obstacles: 1
==> In case 0, the algorithm got 1.3525503233679714.
==> The average performance in this setting is 1.3525503233679714
============== test case ==============
==> num_coins: 2
==> num_enemies: 0
==> num_obstacles: 2
==> In case 0, the algorithm got 1.2317271114581536.
==> The average performance in this setting is 1.2317271114581536
============== test case ==============
==> num_coins: 2
==> num_enemies: 0
==> num_obstacles: 3
==> In case 0, the algorithm got 1.2317271114581536.
==> The average performance in this setting is 1.2317271114581536
============== test case ==============
==> num_coins: 2
==> num_enemies: 0
==> num_obstacles: 4
==> In case 0, the algorithm got 0.9411732831712999.
==> The average performance in this setting is 0.9411732831712999
============== test case ==============
==> num_coins: 2
==> num_enemies: 0
==> num_obstacles: 5
==> In case 0, the algorithm got 0.9411732831712999.
==> The average performance in this setting is 0.9411732831712999
============== test case ==============
==> num_coins: 2
==> num_enemies: 1
==> num_obstacles: 0
==> In case 0, the algorithm got 1.2884935791828807.
==> The average performance in this setting is 1.2884935791828807
============== test case ==============
==> num_coins: 2
==> num_enemies: 1
==> num_obstacles: 1
==> In case 0, the algorithm got 0.9135172474836407.
==> The average performance in this setting is 0.9135172474836407
============== test case ==============
==> num_coins: 2
==> num_enemies: 1
==> num_obstacles: 2
==> In case 0, the algorithm got 1.2110647027290713.
==> The average performance in this setting is 1.2110647027290713
============== test case ==============
==> num_coins: 2
==> num_enemies: 1
==> num_obstacles: 3
==> In case 0, the algorithm got 1.2079780419043566.
==> The average performance in this setting is 1.2079780419043566
============== test case ==============
==> num_coins: 2
==> num_enemies: 1
==> num_obstacles: 4
==> In case 0, the algorithm got 1.0180312384346406.
==> The average performance in this setting is 1.0180312384346406
============== test case ==============
==> num_coins: 2
==> num_enemies: 1
==> num_obstacles: 5
==> In case 0, the algorithm got 1.5162085029193615.
==> The average performance in this setting is 1.5162085029193615
============== test case ==============
==> num_coins: 2
==> num_enemies: 2
==> num_obstacles: 0
==> In case 0, the algorithm got 1.3135298349695765.
==> The average performance in this setting is 1.3135298349695765
============== test case ==============
==> num_coins: 2
==> num_enemies: 2
==> num_obstacles: 1
==> In case 0, the algorithm got 1.3665263282875504.
==> The average performance in this setting is 1.3665263282875504
============== test case ==============
==> num_coins: 2
==> num_enemies: 2
==> num_obstacles: 2
==> In case 0, the algorithm got 1.5137065090628388.
==> The average performance in this setting is 1.5137065090628388
============== test case ==============
==> num_coins: 2
==> num_enemies: 2
==> num_obstacles: 3
==> In case 0, the algorithm got 0.9803660029836201.
==> The average performance in this setting is 0.9803660029836201
============== test case ==============
==> num_coins: 2
==> num_enemies: 2
==> num_obstacles: 4
==> In case 0, the algorithm got 1.2995529411278413.
==> The average performance in this setting is 1.2995529411278413
============== test case ==============
==> num_coins: 2
==> num_enemies: 2
==> num_obstacles: 5
==> In case 0, the algorithm got 0.8860959632523451.
==> The average performance in this setting is 0.8860959632523451
============== test case ==============
==> num_coins: 2
==> num_enemies: 3
==> num_obstacles: 0
==> In case 0, the algorithm got 1.298161882049453.
==> The average performance in this setting is 1.298161882049453
============== test case ==============
==> num_coins: 2
==> num_enemies: 3
==> num_obstacles: 1
==> In case 0, the algorithm got 1.209865928110914.
==> The average performance in this setting is 1.209865928110914
============== test case ==============
==> num_coins: 2
==> num_enemies: 3
==> num_obstacles: 2
==> In case 0, the algorithm got 1.239043326817242.
==> The average performance in this setting is 1.239043326817242
============== test case ==============
==> num_coins: 2
==> num_enemies: 3
==> num_obstacles: 3
==> In case 0, the algorithm got 1.239043326817242.
==> The average performance in this setting is 1.239043326817242
============== test case ==============
==> num_coins: 2
==> num_enemies: 3
==> num_obstacles: 4
==> In case 0, the algorithm got 1.1121982162890596.
==> The average performance in this setting is 1.1121982162890596
============== test case ==============
==> num_coins: 2
==> num_enemies: 3
==> num_obstacles: 5
==> In case 0, the algorithm got 1.27041400976066.
==> The average performance in this setting is 1.27041400976066
============== test case ==============
==> num_coins: 2
==> num_enemies: 4
==> num_obstacles: 0
==> In case 0, the algorithm got 1.32233742190619.
==> The average performance in this setting is 1.32233742190619
============== test case ==============
==> num_coins: 2
==> num_enemies: 4
==> num_obstacles: 1
==> In case 0, the algorithm got 1.3206161985079408.
==> The average performance in this setting is 1.3206161985079408
============== test case ==============
==> num_coins: 2
==> num_enemies: 4
==> num_obstacles: 2
==> In case 0, the algorithm got 0.
==> The average performance in this setting is 0.0
============== test case ==============
==> num_coins: 2
==> num_enemies: 4
==> num_obstacles: 3
==> In case 0, the algorithm got 1.27041400976066.
==> The average performance in this setting is 1.27041400976066
============== test case ==============
==> num_coins: 2
==> num_enemies: 4
==> num_obstacles: 4
==> In case 0, the algorithm got 1.0349987571357178.
==> The average performance in this setting is 1.0349987571357178
============== test case ==============
==> num_coins: 2
==> num_enemies: 4
==> num_obstacles: 5
==> In case 0, the algorithm got 0.
==> The average performance in this setting is 0.0
============== test case ==============
==> num_coins: 2
==> num_enemies: 5
==> num_obstacles: 0
==> In case 0, the algorithm got 1.2356542217417317.
==> The average performance in this setting is 1.2356542217417317
============== test case ==============
==> num_coins: 2
==> num_enemies: 5
==> num_obstacles: 1
==> In case 0, the algorithm got 1.327892683846796.
==> The average performance in this setting is 1.327892683846796
============== test case ==============
==> num_coins: 2
==> num_enemies: 5
==> num_obstacles: 2
==> In case 0, the algorithm got 1.327892683846796.
==> The average performance in this setting is 1.327892683846796
============== test case ==============
==> num_coins: 2
==> num_enemies: 5
==> num_obstacles: 3
==> In case 0, the algorithm got 1.327892683846796.
==> The average performance in this setting is 1.327892683846796
============== test case ==============
==> num_coins: 2
==> num_enemies: 5
==> num_obstacles: 4
==> In case 0, the algorithm got 1.113198243670368.
==> The average performance in this setting is 1.113198243670368
============== test case ==============
==> num_coins: 2
==> num_enemies: 5
==> num_obstacles: 5
==> In case 0, the algorithm got 1.3210072834357935.
==> The average performance in this setting is 1.3210072834357935
============== test case ==============
==> num_coins: 3
==> num_enemies: 0
==> num_obstacles: 0
==> In case 0, the algorithm got 2.2058517924568384.
==> The average performance in this setting is 2.2058517924568384
============== test case ==============
==> num_coins: 3
==> num_enemies: 0
==> num_obstacles: 1
==> In case 0, the algorithm got 1.6797404845601798.
==> The average performance in this setting is 1.6797404845601798
============== test case ==============
==> num_coins: 3
==> num_enemies: 0
==> num_obstacles: 2
==> In case 0, the algorithm got 1.6283652500995367.
==> The average performance in this setting is 1.6283652500995367
============== test case ==============
==> num_coins: 3
==> num_enemies: 0
==> num_obstacles: 3
==> In case 0, the algorithm got 1.6205110295323806.
==> The average performance in this setting is 1.6205110295323806
============== test case ==============
==> num_coins: 3
==> num_enemies: 0
==> num_obstacles: 4
==> In case 0, the algorithm got 1.827558154887429.
==> The average performance in this setting is 1.827558154887429
============== test case ==============
==> num_coins: 3
==> num_enemies: 0
==> num_obstacles: 5
==> In case 0, the algorithm got 1.896249559381018.
==> The average performance in this setting is 1.896249559381018
============== test case ==============
==> num_coins: 3
==> num_enemies: 1
==> num_obstacles: 0
==> In case 0, the algorithm got 1.650544300009693.
==> The average performance in this setting is 1.650544300009693
============== test case ==============
==> num_coins: 3
==> num_enemies: 1
==> num_obstacles: 1
==> In case 0, the algorithm got 2.0881556531125502.
==> The average performance in this setting is 2.0881556531125502
============== test case ==============
==> num_coins: 3
==> num_enemies: 1
==> num_obstacles: 2
==> In case 0, the algorithm got 2.0034761767802585.
==> The average performance in this setting is 2.0034761767802585
============== test case ==============
==> num_coins: 3
==> num_enemies: 1
==> num_obstacles: 3
==> In case 0, the algorithm got 2.0034761767802585.
==> The average performance in this setting is 2.0034761767802585
============== test case ==============
==> num_coins: 3
==> num_enemies: 1
==> num_obstacles: 4
==> In case 0, the algorithm got 1.5728184454296814.
==> The average performance in this setting is 1.5728184454296814
============== test case ==============
==> num_coins: 3
==> num_enemies: 1
==> num_obstacles: 5
==> In case 0, the algorithm got 1.8505853598092745.
==> The average performance in this setting is 1.8505853598092745
============== test case ==============
==> num_coins: 3
==> num_enemies: 2
==> num_obstacles: 0
==> In case 0, the algorithm got 1.4853408781822903.
==> The average performance in this setting is 1.4853408781822903
============== test case ==============
==> num_coins: 3
==> num_enemies: 2
==> num_obstacles: 1
==> In case 0, the algorithm got 2.051054534133794.
==> The average performance in this setting is 2.051054534133794
============== test case ==============
==> num_coins: 3
==> num_enemies: 2
==> num_obstacles: 2
==> In case 0, the algorithm got 1.6899122359072822.
==> The average performance in this setting is 1.6899122359072822
============== test case ==============
==> num_coins: 3
==> num_enemies: 2
==> num_obstacles: 3
==> In case 0, the algorithm got 1.6899122359072822.
==> The average performance in this setting is 1.6899122359072822
============== test case ==============
==> num_coins: 3
==> num_enemies: 2
==> num_obstacles: 4
==> In case 0, the algorithm got 1.4887170585629155.
==> The average performance in this setting is 1.4887170585629155
============== test case ==============
==> num_coins: 3
==> num_enemies: 2
==> num_obstacles: 5
==> In case 0, the algorithm got 1.6575367432984385.
==> The average performance in this setting is 1.6575367432984385
============== test case ==============
==> num_coins: 3
==> num_enemies: 3
==> num_obstacles: 0
==> In case 0, the algorithm got 1.509797586329236.
==> The average performance in this setting is 1.509797586329236
============== test case ==============
==> num_coins: 3
==> num_enemies: 3
==> num_obstacles: 1
==> In case 0, the algorithm got 1.4119070441820663.
==> The average performance in this setting is 1.4119070441820663
============== test case ==============
==> num_coins: 3
==> num_enemies: 3
==> num_obstacles: 2
==> In case 0, the algorithm got 1.8265849803184353.
==> The average performance in this setting is 1.8265849803184353
============== test case ==============
==> num_coins: 3
==> num_enemies: 3
==> num_obstacles: 3
==> In case 0, the algorithm got 1.8265849803184353.
==> The average performance in this setting is 1.8265849803184353
============== test case ==============
==> num_coins: 3
==> num_enemies: 3
==> num_obstacles: 4
==> In case 0, the algorithm got 1.609084923500725.
==> The average performance in this setting is 1.609084923500725
============== test case ==============
==> num_coins: 3
==> num_enemies: 3
==> num_obstacles: 5
==> In case 0, the algorithm got 1.6142606241821416.
==> The average performance in this setting is 1.6142606241821416
============== test case ==============
==> num_coins: 3
==> num_enemies: 4
==> num_obstacles: 0
==> In case 0, the algorithm got 1.9504398297111731.
==> The average performance in this setting is 1.9504398297111731
============== test case ==============
==> num_coins: 3
==> num_enemies: 4
==> num_obstacles: 1
==> In case 0, the algorithm got 0.
==> The average performance in this setting is 0.0
============== test case ==============
==> num_coins: 3
==> num_enemies: 4
==> num_obstacles: 2
==> In case 0, the algorithm got 1.6569649600296323.
==> The average performance in this setting is 1.6569649600296323
============== test case ==============
==> num_coins: 3
==> num_enemies: 4
==> num_obstacles: 3
==> In case 0, the algorithm got 1.5784214159659775.
==> The average performance in this setting is 1.5784214159659775
============== test case ==============
==> num_coins: 3
==> num_enemies: 4
==> num_obstacles: 4
==> In case 0, the algorithm got 0.
==> The average performance in this setting is 0.0
============== test case ==============
==> num_coins: 3
==> num_enemies: 4
==> num_obstacles: 5
==> In case 0, the algorithm got 1.9347551206480778.
==> The average performance in this setting is 1.9347551206480778
============== test case ==============
==> num_coins: 3
==> num_enemies: 5
==> num_obstacles: 0
==> In case 0, the algorithm got 0.
==> The average performance in this setting is 0.0
============== test case ==============
==> num_coins: 3
==> num_enemies: 5
==> num_obstacles: 1
==> In case 0, the algorithm got 1.9260519216234995.
==> The average performance in this setting is 1.9260519216234995
============== test case ==============
==> num_coins: 3
==> num_enemies: 5
==> num_obstacles: 2
==> In case 0, the algorithm got 1.9260519216234995.
==> The average performance in this setting is 1.9260519216234995
============== test case ==============
==> num_coins: 3
==> num_enemies: 5
==> num_obstacles: 3
==> In case 0, the algorithm got 1.8951204921170746.
==> The average performance in this setting is 1.8951204921170746
============== test case ==============
==> num_coins: 3
==> num_enemies: 5
==> num_obstacles: 4
==> In case 0, the algorithm got 1.654465986803312.
==> The average performance in this setting is 1.654465986803312
============== test case ==============
==> num_coins: 3
==> num_enemies: 5
==> num_obstacles: 5
==> In case 0, the algorithm got 1.3333868047290647.
==> The average performance in this setting is 1.3333868047290647
============== test case ==============
==> num_coins: 4
==> num_enemies: 0
==> num_obstacles: 0
==> In case 0, the algorithm got 2.1933115475603424.
==> The average performance in this setting is 2.1933115475603424
============== test case ==============
==> num_coins: 4
==> num_enemies: 0
==> num_obstacles: 1
==> In case 0, the algorithm got 2.5147501218156663.
==> The average performance in this setting is 2.5147501218156663
============== test case ==============
==> num_coins: 4
==> num_enemies: 0
==> num_obstacles: 2
==> In case 0, the algorithm got 2.489602620597509.
==> The average performance in this setting is 2.489602620597509
============== test case ==============
==> num_coins: 4
==> num_enemies: 0
==> num_obstacles: 3
==> In case 0, the algorithm got 2.1120034969808894.
==> The average performance in this setting is 2.1120034969808894
============== test case ==============
==> num_coins: 4
==> num_enemies: 0
==> num_obstacles: 4
==> In case 0, the algorithm got 2.353458969802815.
==> The average performance in this setting is 2.353458969802815
============== test case ==============
==> num_coins: 4
==> num_enemies: 0
==> num_obstacles: 5
==> In case 0, the algorithm got 2.0241815355785335.
==> The average performance in this setting is 2.0241815355785335
============== test case ==============
==> num_coins: 4
==> num_enemies: 1
==> num_obstacles: 0
==> In case 0, the algorithm got 2.233536364347191.
==> The average performance in this setting is 2.233536364347191
============== test case ==============
==> num_coins: 4
==> num_enemies: 1
==> num_obstacles: 1
==> In case 0, the algorithm got 1.9671631336177466.
==> The average performance in this setting is 1.9671631336177466
============== test case ==============
==> num_coins: 4
==> num_enemies: 1
==> num_obstacles: 2
==> In case 0, the algorithm got 1.9552697158755603.
==> The average performance in this setting is 1.9552697158755603
============== test case ==============
==> num_coins: 4
==> num_enemies: 1
==> num_obstacles: 3
==> In case 0, the algorithm got 1.9575750740587456.
==> The average performance in this setting is 1.9575750740587456
============== test case ==============
==> num_coins: 4
==> num_enemies: 1
==> num_obstacles: 4
==> In case 0, the algorithm got 2.1339906195202243.
==> The average performance in this setting is 2.1339906195202243
============== test case ==============
==> num_coins: 4
==> num_enemies: 1
==> num_obstacles: 5
==> In case 0, the algorithm got 1.9012981843236625.
==> The average performance in this setting is 1.9012981843236625
============== test case ==============
==> num_coins: 4
==> num_enemies: 2
==> num_obstacles: 0
==> In case 0, the algorithm got 2.330460770695141.
==> The average performance in this setting is 2.330460770695141
============== test case ==============
==> num_coins: 4
==> num_enemies: 2
==> num_obstacles: 1
==> In case 0, the algorithm got 1.4067253943664355.
==> The average performance in this setting is 1.4067253943664355
============== test case ==============
==> num_coins: 4
==> num_enemies: 2
==> num_obstacles: 2
==> In case 0, the algorithm got 2.6788735556796794.
==> The average performance in this setting is 2.6788735556796794
============== test case ==============
==> num_coins: 4
==> num_enemies: 2
==> num_obstacles: 3
==> In case 0, the algorithm got 2.6788735556796794.
==> The average performance in this setting is 2.6788735556796794
============== test case ==============
==> num_coins: 4
==> num_enemies: 2
==> num_obstacles: 4
==> In case 0, the algorithm got 1.939397438838902.
==> The average performance in this setting is 1.939397438838902
============== test case ==============
==> num_coins: 4
==> num_enemies: 2
==> num_obstacles: 5
==> In case 0, the algorithm got 1.8740076248031552.
==> The average performance in this setting is 1.8740076248031552
============== test case ==============
==> num_coins: 4
==> num_enemies: 3
==> num_obstacles: 0
==> In case 0, the algorithm got 2.0741890851660494.
==> The average performance in this setting is 2.0741890851660494
============== test case ==============
==> num_coins: 4
==> num_enemies: 3
==> num_obstacles: 1
==> In case 0, the algorithm got 0.8429431933839266.
==> The average performance in this setting is 0.8429431933839266
============== test case ==============
==> num_coins: 4
==> num_enemies: 3
==> num_obstacles: 2
==> In case 0, the algorithm got 0.8429431933839266.
==> The average performance in this setting is 0.8429431933839266
============== test case ==============
==> num_coins: 4
==> num_enemies: 3
==> num_obstacles: 3
==> In case 0, the algorithm got 1.9829298344359803.
==> The average performance in this setting is 1.9829298344359803
============== test case ==============
==> num_coins: 4
==> num_enemies: 3
==> num_obstacles: 4
==> In case 0, the algorithm got 2.2758508353725406.
==> The average performance in this setting is 2.2758508353725406
============== test case ==============
==> num_coins: 4
==> num_enemies: 3
==> num_obstacles: 5
==> In case 0, the algorithm got 2.298839227649031.
==> The average performance in this setting is 2.298839227649031
============== test case ==============
==> num_coins: 4
==> num_enemies: 4
==> num_obstacles: 0
==> In case 0, the algorithm got 1.9375056167418094.
==> The average performance in this setting is 1.9375056167418094
============== test case ==============
==> num_coins: 4
==> num_enemies: 4
==> num_obstacles: 1
==> In case 0, the algorithm got 1.9146081803648176.
==> The average performance in this setting is 1.9146081803648176
============== test case ==============
==> num_coins: 4
==> num_enemies: 4
==> num_obstacles: 2
==> In case 0, the algorithm got 2.646517161502816.
==> The average performance in this setting is 2.646517161502816
============== test case ==============
==> num_coins: 4
==> num_enemies: 4
==> num_obstacles: 3
==> In case 0, the algorithm got 2.646517161502816.
==> The average performance in this setting is 2.646517161502816
============== test case ==============
==> num_coins: 4
==> num_enemies: 4
==> num_obstacles: 4
==> In case 0, the algorithm got 1.9742604831686315.
==> The average performance in this setting is 1.9742604831686315
============== test case ==============
==> num_coins: 4
==> num_enemies: 4
==> num_obstacles: 5
==> In case 0, the algorithm got 2.2613920336409272.
==> The average performance in this setting is 2.2613920336409272
============== test case ==============
==> num_coins: 4
==> num_enemies: 5
==> num_obstacles: 0
==> In case 0, the algorithm got 2.5776750871274614.
==> The average performance in this setting is 2.5776750871274614
============== test case ==============
==> num_coins: 4
==> num_enemies: 5
==> num_obstacles: 1
==> In case 0, the algorithm got 2.149905606591888.
==> The average performance in this setting is 2.149905606591888
============== test case ==============
==> num_coins: 4
==> num_enemies: 5
==> num_obstacles: 2
==> In case 0, the algorithm got 2.149905606591888.
==> The average performance in this setting is 2.149905606591888
============== test case ==============
==> num_coins: 4
==> num_enemies: 5
==> num_obstacles: 3
==> In case 0, the algorithm got 2.149905606591888.
==> The average performance in this setting is 2.149905606591888
============== test case ==============
==> num_coins: 4
==> num_enemies: 5
==> num_obstacles: 4
==> In case 0, the algorithm got 1.604822557577243.
==> The average performance in this setting is 1.604822557577243
============== test case ==============
==> num_coins: 4
==> num_enemies: 5
==> num_obstacles: 5
==> In case 0, the algorithm got 2.063688385017638.
==> The average performance in this setting is 2.063688385017638
============== test case ==============
==> num_coins: 5
==> num_enemies: 0
==> num_obstacles: 0
==> In case 0, the algorithm got 3.001284012588787.
==> The average performance in this setting is 3.001284012588787
============== test case ==============
==> num_coins: 5
==> num_enemies: 0
==> num_obstacles: 1
==> In case 0, the algorithm got 2.7671569279267123.
==> The average performance in this setting is 2.7671569279267123
============== test case ==============
==> num_coins: 5
==> num_enemies: 0
==> num_obstacles: 2
==> In case 0, the algorithm got 2.7345737691184895.
==> The average performance in this setting is 2.7345737691184895
============== test case ==============
==> num_coins: 5
==> num_enemies: 0
==> num_obstacles: 3
==> In case 0, the algorithm got 2.4182532421009166.
==> The average performance in this setting is 2.4182532421009166
============== test case ==============
==> num_coins: 5
==> num_enemies: 0
==> num_obstacles: 4
==> In case 0, the algorithm got 2.949791198961673.
==> The average performance in this setting is 2.949791198961673
============== test case ==============
==> num_coins: 5
==> num_enemies: 0
==> num_obstacles: 5
==> In case 0, the algorithm got 2.6136809404378334.
==> The average performance in this setting is 2.6136809404378334
============== test case ==============
==> num_coins: 5
==> num_enemies: 1
==> num_obstacles: 0
==> In case 0, the algorithm got 2.221852441336573.
==> The average performance in this setting is 2.221852441336573
============== test case ==============
==> num_coins: 5
==> num_enemies: 1
==> num_obstacles: 1
==> In case 0, the algorithm got 2.4104863571968926.
==> The average performance in this setting is 2.4104863571968926
============== test case ==============
==> num_coins: 5
==> num_enemies: 1
==> num_obstacles: 2
==> In case 0, the algorithm got 2.3718102245067767.
==> The average performance in this setting is 2.3718102245067767
============== test case ==============
==> num_coins: 5
==> num_enemies: 1
==> num_obstacles: 3
==> In case 0, the algorithm got 2.3718102245067767.
==> The average performance in this setting is 2.3718102245067767
============== test case ==============
==> num_coins: 5
==> num_enemies: 1
==> num_obstacles: 4
==> In case 0, the algorithm got 3.280638275898529.
==> The average performance in this setting is 3.280638275898529
============== test case ==============
==> num_coins: 5
==> num_enemies: 1
==> num_obstacles: 5
==> In case 0, the algorithm got 2.9967111732533316.
==> The average performance in this setting is 2.9967111732533316
============== test case ==============
==> num_coins: 5
==> num_enemies: 2
==> num_obstacles: 0
==> In case 0, the algorithm got 2.255243797335175.
==> The average performance in this setting is 2.255243797335175
============== test case ==============
==> num_coins: 5
==> num_enemies: 2
==> num_obstacles: 1
==> In case 0, the algorithm got 0.9135172474836407.
==> The average performance in this setting is 0.9135172474836407
============== test case ==============
==> num_coins: 5
==> num_enemies: 2
==> num_obstacles: 2
==> In case 0, the algorithm got 2.682506737998288.
==> The average performance in this setting is 2.682506737998288
============== test case ==============
==> num_coins: 5
==> num_enemies: 2
==> num_obstacles: 3
==> In case 0, the algorithm got 2.682506737998288.
==> The average performance in this setting is 2.682506737998288
============== test case ==============
==> num_coins: 5
==> num_enemies: 2
==> num_obstacles: 4
==> In case 0, the algorithm got 2.2818570071962423.
==> The average performance in this setting is 2.2818570071962423
============== test case ==============
==> num_coins: 5
==> num_enemies: 2
==> num_obstacles: 5
==> In case 0, the algorithm got 2.5114336686279635.
==> The average performance in this setting is 2.5114336686279635
============== test case ==============
==> num_coins: 5
==> num_enemies: 3
==> num_obstacles: 0
==> In case 0, the algorithm got 2.324365560146341.
==> The average performance in this setting is 2.324365560146341
============== test case ==============
==> num_coins: 5
==> num_enemies: 3
==> num_obstacles: 1
==> In case 0, the algorithm got 0.8429431933839266.
==> The average performance in this setting is 0.8429431933839266
============== test case ==============
==> num_coins: 5
==> num_enemies: 3
==> num_obstacles: 2
==> In case 0, the algorithm got 2.4101150618777467.
==> The average performance in this setting is 2.4101150618777467
============== test case ==============
==> num_coins: 5
==> num_enemies: 3
==> num_obstacles: 3
==> In case 0, the algorithm got 2.404991118203144.
==> The average performance in this setting is 2.404991118203144
============== test case ==============
==> num_coins: 5
==> num_enemies: 3
==> num_obstacles: 4
==> In case 0, the algorithm got 2.717367093706682.
==> The average performance in this setting is 2.717367093706682
============== test case ==============
==> num_coins: 5
==> num_enemies: 3
==> num_obstacles: 5
==> In case 0, the algorithm got 2.717367093706682.
==> The average performance in this setting is 2.717367093706682
============== test case ==============
==> num_coins: 5
==> num_enemies: 4
==> num_obstacles: 0
==> In case 0, the algorithm got 2.730547391540407.
==> The average performance in this setting is 2.730547391540407
============== test case ==============
==> num_coins: 5
==> num_enemies: 4
==> num_obstacles: 1
==> In case 0, the algorithm got 2.601134560575934.
==> The average performance in this setting is 2.601134560575934
============== test case ==============
==> num_coins: 5
==> num_enemies: 4
==> num_obstacles: 2
==> In case 0, the algorithm got 2.994406071791798.
==> The average performance in this setting is 2.994406071791798
============== test case ==============
==> num_coins: 5
==> num_enemies: 4
==> num_obstacles: 3
==> In case 0, the algorithm got 3.0028355037256373.
==> The average performance in this setting is 3.0028355037256373
============== test case ==============
==> num_coins: 5
==> num_enemies: 4
==> num_obstacles: 4
==> In case 0, the algorithm got 2.49898458842922.
==> The average performance in this setting is 2.49898458842922
============== test case ==============
==> num_coins: 5
==> num_enemies: 4
==> num_obstacles: 5
==> In case 0, the algorithm got 2.8591392081896005.
==> The average performance in this setting is 2.8591392081896005
============== test case ==============
==> num_coins: 5
==> num_enemies: 5
==> num_obstacles: 0
==> In case 0, the algorithm got 0.
==> The average performance in this setting is 0.0
============== test case ==============
==> num_coins: 5
==> num_enemies: 5
==> num_obstacles: 1
==> In case 0, the algorithm got 0.8429431933839266.
==> The average performance in this setting is 0.8429431933839266
============== test case ==============
==> num_coins: 5
==> num_enemies: 5
==> num_obstacles: 2
==> In case 0, the algorithm got 2.930692980820722.
==> The average performance in this setting is 2.930692980820722
============== test case ==============
==> num_coins: 5
==> num_enemies: 5
==> num_obstacles: 3
==> In case 0, the algorithm got 2.930692980820722.
==> The average performance in this setting is 2.930692980820722
============== test case ==============
==> num_coins: 5
==> num_enemies: 5
==> num_obstacles: 4
==> In case 0, the algorithm got 2.390542901051051.
==> The average performance in this setting is 2.390542901051051
============== test case ==============
==> num_coins: 5
==> num_enemies: 5
==> num_obstacles: 5
==> In case 0, the algorithm got 2.1536036971767865.
==> The average performance in this setting is 2.1536036971767865
0
